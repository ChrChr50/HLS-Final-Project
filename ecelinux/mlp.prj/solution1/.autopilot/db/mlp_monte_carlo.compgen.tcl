# This script segment is generated automatically by AutoPilot

set id 2
set name dut_mac_muladd_16tde
set corename simcore_mac
set op mac
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 16
set in0_signed 1
set in1_width 15
set in1_signed 1
set in2_width 26
set in2_signed 0
set out_width 26
set exp i0*i1+i2
set arg_lists {i0 {16 1 +} i1 {15 1 +} m {26 1 +} i2 {26 0 +} p {26 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 4
set name dut_mac_muladd_16udo
set corename simcore_mac
set op mac
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 16
set in0_signed 1
set in1_width 13
set in1_signed 1
set in2_width 26
set in2_signed 0
set out_width 26
set exp i0*i1+i2
set arg_lists {i0 {16 1 +} i1 {13 1 +} m {26 1 +} i2 {26 0 +} p {26 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 5
set name dut_mac_muladd_16vdy
set corename simcore_mac
set op mac
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 16
set in0_signed 1
set in1_width 14
set in1_signed 1
set in2_width 26
set in2_signed 0
set out_width 26
set exp i0*i1+i2
set arg_lists {i0 {16 1 +} i1 {14 1 +} m {26 1 +} i2 {26 0 +} p {26 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 6
set name dut_mac_muladd_12wdI
set corename simcore_mac
set op mac
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 12
set in0_signed 1
set in1_width 16
set in1_signed 1
set in2_width 26
set in2_signed 0
set out_width 26
set exp i0*i1+i2
set arg_lists {i0 {12 1 +} i1 {16 1 +} m {26 1 +} i2 {26 0 +} p {26 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 7
set name dut_mul_mul_18ns_xdS
set corename simcore_mul
set op mul
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 18
set in0_signed 0
set in1_width 16
set in1_signed 1
set out_width 34
set exp i0*i1
set arg_lists {i0 {18 0 +} i1 {16 1 +} p {34 1 +} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 9
set name dut_mac_muladd_17yd2
set corename simcore_mac
set op mac
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 17
set in0_signed 1
set in1_width 17
set in1_signed 1
set in2_width 26
set in2_signed 0
set out_width 26
set exp i0*i1+i2
set arg_lists {i0 {17 1 +} i1 {17 1 +} m {26 1 +} i2 {26 0 +} p {26 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 16
set hasByteEnable 0
set MemName mlp_monte_carlo_bbkb
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 16
set AddrRange 64
set AddrWd 6
set TrueReset 0
set IsROM 1
set ROMData { "0011000000011000" "0011001110101101" "0011010100101001" "0000000000000000" "0000000000000000" "0000111011101100" "0010010101010101" "0001101000100100" "0010010010011110" "0010000100010111" "1111111111100101" "0010001000101011" "0000100011110110" "0000011111110111" "0010010101100100" "0010100100111110" "0001100111000011" "0010100001111111" "1100111110011001" "0000000000000000" "1101111011001011" "1110000001010101" "0000000000000000" "0001001100001110" "0010100110010100" "0010000101101101" "0010000111000110" "0010011110010010" "0010001101001011" "0001010110100101" "0000000000000000" "0000000000000000" "0010010001001001" "0010000111101101" "0000001011010010" "0000011111001011" "0001000001000000" "0010010010101100" "0000100010010010" "0010000010110011" "0010111111001000" "0000100000010000" "0010110101101000" "1110000110001011" "0010011110100001" "0100001011010111" "0010101011111111" "0010110001110100" "0001011010011111" "0000000000000000" "0010010100110001" "0001101010110010" "0000000000000000" "0000000000000000" "0001100100111010" "0010000101100100" "0010010110011011" "0000000000000000" "0001110000010000" "0001100110001000" "0000000000000000" "0001001010011011" "0001011010111001" "0000111110011101" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 17
set hasByteEnable 0
set MemName mlp_monte_carlo_wcud
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 576
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "000000011001001" "000000000100001" "111101111111011" "111111100000110" "111111101010011" "111111110110100" "111111110010100" "000011110100111" "111111111001111" "111111111111001" "111111111001101" "000000100100001" "000000000101000" "000000011011101" "000000000110011" "111111100101001" "000001000110011" "000000011011100" "111111111010001" "111111110001100" "000001000110010" "000001000101011" "000000001001101" "000000001101010" "000011000110101" "111110110110001" "000000111110010" "111100011001011" "000011010001101" "000001000011100" "111111110001001" "111111110000001" "000000000001111" "111111000101100" "000010010110000" "111101101111110" "000001110000001" "111111011110000" "000010001001001" "111110100100001" "111111001011110" "000010010011010" "000001010000011" "000100111011011" "111111010111100" "111110111111011" "000000101001000" "000000110100001" "000011011011100" "111111100001010" "000000100011110" "000010001110001" "111111111001010" "111111110111101" "000001110001100" "111110001100110" "000000010011111" "111111110011111" "000000100001111" "000000101111101" "111111111000001" "000001011010101" "111101101110101" "111111100101001" "111111111101111" "111111111100000" "111111111001011" "111111011111010" "111111100101011" "000000000011110" "111111111010010" "111111100101111" "111111111111110" "111111111010111" "111111011100011" "000000000000111" "111111110101000" "111111011100111" "000000000000010" "111111111101100" "111111011100011" "000000010101000" "111111111110110" "111111111101001" "000000101111111" "111111111100010" "111111101000001" "000000001000101" "000000000001110" "000000000011001" "111111011111100" "111111111101001" "111111000010011" "111111011101110" "111111011110100" "111111110010001" "000000000001111" "111111101010111" "111111001001010" "111111011000101" "000000000011101" "000000001000010" "111111101011111" "000000000110110" "000000100011011" "111111001000011" "111111111011111" "111111001011110" "000000011110111" "000000010110101" "000000011100000" "000000011000101" "111111010111011" "111111011111101" "000000001011011" "000000010100010" "111111101011101" "111111110100010" "000000110101010" "000000100001111" "111111111100100" "111111111010111" "000000001110011" "000000000100011" "111111110011101" "000000011111100" "111111111011101" "000000110111111" "111100111000011" "111110111011011" "000010110100001" "111111111100100" "000000010011010" "000001111101100" "000000000011100" "111011011001110" "111111110001111" "000010101101110" "000000011110100" "111111000111111" "111111100101011" "111111000011101" "000000000111000" "111101110001101" "000001010100100" "111011000011100" "111111111100001" "111111101001101" "000010001111001" "111011000101010" "111111110001100" "000010000011000" "000010000010100" "000010101110100" "111111001000111" "111010111000011" "000001110100101" "001001001011011" "111111111010001" "000000000001110" "000000001000101" "111010001101100" "111100101011000" "111110110001100" "000001100110111" "111110101101100" "111110010010101" "000000110101111" "000100000011111" "000000111001111" "111010100110111" "111110101010001" "111010101110010" "111111010100011" "111110100000000" "111110000011110" "000011100111010" "111111101100001" "000000101111010" "111110000001001" "111111011011110" "000000010000111" "111101111001011" "000001100011110" "111111011110111" "111111110110000" "000010000100000" "111111101011010" "000000010101010" "111111001001101" "111011000101011" "111100101011100" "111111110111011" "000000000001111" "000000000000000" "111111011101111" "111111111101110" "110101100100001" "111110100010100" "111111111110000" "111011011111101" "000000000001010" "111111101101000" "111111111111011" "000000000001000" "111111010011010" "111111110011110" "111111111100111" "111111111011111" "111111100001011" "110111010100111" "111111111000001" "111111111001011" "000000010001100" "111111101101111" "111100111111110" "000000000000001" "111111011111111" "000000000000110" "000000000101010" "111111111011000" "111111111110010" "111111110110100" "111111110001000" "101001100110101" "000000000001101" "111111011100010" "111111111111100" "111111111011101" "111101001000110" "111111100010101" "111111111001011" "111111111110110" "111111111101100" "111111111100001" "000000000011100" "111111111110001" "000000000100000" "000000000000001" "000000000000010" "111111111101101" "111111101010011" "111111111010000" "000000000110011" "111111100100010" "111111100100000" "000000001000001" "111111110000111" "111111010110101" "111111101111010" "111110101111111" "111111010010011" "111111101100001" "111111111110010" "000000000001011" "000000000000010" "000000000011111" "111111111100110" "000000000000001" "000000000011110" "111111101010111" "110100100110111" "000000011001010" "111111111110110" "000001111001000" "111111000111011" "000000000000111" "000000000101011" "000000000111011" "000000010100110" "111101011000010" "000000011000100" "111111111001100" "000000101100000" "111110001011110" "111111111000011" "111111110010010" "111111100100110" "111111101000111" "111101010011000" "111111111111001" "111101110011100" "000000001001010" "000000000010110" "111111111100101" "000000000011100" "111111110100110" "000000000000110" "110010010101110" "000000000000111" "000000011011010" "000000000001010" "000000000000101" "000000101001101" "110001001100001" "000000000110000" "111111111101111" "111111111100010" "111111111111110" "000000000110111" "111111111101100" "000000000011101" "000000000010100" "111111111011111" "111111111110100" "111111110111101" "111111111111010" "111111110000111" "111111011111011" "111111110010000" "111111110000100" "111110101100101" "111111101000100" "111111100000011" "000000111101011" "000000010101110" "111111110101011" "000000000000010" "000000000000110" "111111010001101" "000000000010001" "111110010010000" "000000011000010" "111111101111111" "111111101001001" "111111111011101" "111111111101101" "111110111000000" "111111111100010" "111110110000101" "111111110000110" "000000010000011" "111111101010100" "111111111000000" "111111111101000" "111111110010011" "111110100011101" "111110111101101" "111111111101110" "000000000110110" "111111110011111" "000000011110000" "000000011000011" "111111111010001" "111111110001010" "000000001000101" "000010110100011" "000010000010011" "111111110011110" "111110101000011" "111111101011000" "111111101101010" "111111111100011" "111100010111100" "111111011111110" "000001001100001" "111110010001010" "000000000011111" "111111011101111" "000001000010100" "111111101011011" "000000101111011" "000000100001011" "111111101100010" "000000100110111" "000000001010100" "000000100011100" "000000001111110" "111111001100001" "111111101010010" "111111010010001" "000000000000110" "111111101110111" "111111100001100" "111110111101110" "000000100010000" "111111111110111" "111111110101010" "000000101111010" "111111111100110" "000000010101010" "000000010111100" "000011110101010" "000000011001110" "000000101101000" "111100101111110" "000000101110110" "000000011001100" "111111111000101" "000001110110110" "111111101101111" "111001111110001" "111110101001100" "000001011100110" "000000011110110" "000011000001001" "111011011111100" "000000100000000" "111100100101010" "000001100110100" "000100010100100" "111111101101001" "111111100100101" "111111011101101" "000001001000000" "000001010000110" "000000011001010" "000001111000010" "111010001111000" "111110010111001" "000000010101111" "111111001011101" "111100101010110" "000010010100010" "000000001011001" "111111100111110" "111110101011111" "000111101101000" "000100011011011" "000110100010101" "000100101000001" "111110001000110" "000000001100111" "000000110110100" "111111100001000" "000111001011111" "000011110000101" "111101101101111" "111100011100011" "111001001001101" "111101001010000" "111111011011111" "000110101111111" "000000010001010" "111111101000110" "000100000110010" "000000010110011" "111111101111001" "000011110101001" "000000101001001" "111111110110010" "111111111100001" "111110010110001" "111101000001000" "111111100010001" "111111100110001" "111100001000010" "111111100011111" "111111001000100" "000010010010000" "111111111001010" "000000001110001" "111111111111010" "000010001111000" "111111110111000" "111111101101001" "111111111101101" "111111111011101" "000000011001100" "111110110110011" "000111011111101" "000100100100011" "000000000111010" "111111000000001" "111111111000000" "111100010011100" "000001101100111" "111111110000010" "000010000001101" "111111111111010" "111111011011110" "000010010101010" "111110111101101" "111111111111000" "000000010000000" "000000011001101" "000001100110001" "111111101000010" "000000001001000" "000000001111100" "111111111000001" "111111111100100" "111111010110111" "000000001111010" "000001000110010" "000000000000000" "111011100001011" "111110010010110" "111101111110000" "111101001100010" "111111100100000" "111111001000100" "000001000010011" "111101011110110" "111111111100000" "111101101010010" "111110110100100" "111111100000110" "111110110010011" "000001010000101" "111111101010101" "111111101011101" "000001001111001" "111111100000010" "111111010100011" "111111011101010" "111111000001110" "111101011011011" "111111111010110" "111110111111001" "000000001110000" "111111111101110" "111111001100010" "000001101011011" "000001010000010" "111111100101000" "111111101010001" "111110100101101" "111111011101000" "111101000111101" "000000000101110" "000010101111000" "111111100000100" "111101000010000" "111111101000110" "111110010110111" "111111111101000" "000001110000111" "000101101101111" "000000000001000" "111111101110000" "000000010010001" "111110011111100" "000000111011000" "111111100000110" "000001011111010" "000001001110111" "000001001000010" "111100011010101" "111110011010101" "000100000000011" "111110000111011" "000000000001110" "111111111111010" "111111100010101" "111111000111001" "111110101001100" "000000011110000" "111110001101110" "000000101011101" "000011010011011" "000100010001011" "111110001100001" "111110101000010" "111101111110001" "000001001010010" "000000001110100" "000000011111001" "111001100111000" "000000001000000" "111111111100110" "000000000000001" "000100001001000" "111101001101110" "000000010010111" "111111011101111" "111101011101011" "111111011111111" "000000000101100" "000000100000110" "111110110110011" "000000001010110" "000000001110001" "110100100000001" "111111000101011" "111101000010111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 18
set hasByteEnable 0
set MemName mlp_monte_carlo_bdEe
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 32
set AddrWd 5
set TrueReset 0
set IsROM 1
set ROMData { "111010110001110" "111111111000001" "010011001011001" "010010011001111" "001101001111101" "010010010011000" "111111111000011" "010011000110001" "000000000000000" "010011000110101" "010011001100110" "010011000010001" "111111111011111" "111111110001110" "010010011001011" "111111110110110" "010001110010010" "010011000100001" "010010101001100" "010011000110101" "010011010110001" "010011101101000" "010011001100011" "010001001100111" "010010001111111" "010010101111000" "111111111001101" "010011000001010" "010011001001011" "010010111111111" "111111110010001" "010010100011001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 19
set hasByteEnable 0
set MemName mlp_monte_carlo_weOg
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 2048
set AddrWd 11
set TrueReset 0
set IsROM 1
set ROMData { "000001010000001" "000000000110101" "000000110101101" "111110000010110" "000000111111111" "000000001110000" "111111101101010" "000000011111100" "000000011011100" "111111110110011" "111111111010000" "000000011011001" "111111110111011" "000000010000001" "111111100001001" "111111101010110" "111111000101111" "111111101100011" "000000110110111" "000000011101010" "111111011101011" "111111110110101" "000000001001100" "000000110011000" "000000100001111" "000000011100100" "111111011110001" "000000000011111" "000000001111101" "000000010000100" "111111010111110" "000000001110110" "000001111000011" "000000010001001" "000010001110111" "111111101001110" "111110110100000" "000000000010001" "111111100110101" "000000000000110" "000000000000000" "111111100001100" "000000001010101" "000000000110010" "111111110001110" "111111111001011" "000000011110101" "111111101011011" "000000101000100" "111111101110001" "111111110110101" "111111011011001" "000000001101011" "000000011101011" "000000001110001" "111110110000110" "111111111111100" "000000010110000" "111111110101111" "111111100111100" "000000001100000" "111111101000001" "111111011100100" "000000001000111" "000010010001000" "111111100100001" "000100111110111" "111110111010111" "000000001111111" "000001111011111" "111111101001000" "000000000010000" "111111110010110" "111110110111101" "111111000000111" "111111010011110" "000000001010010" "000000010101001" "111111110101111" "111111101011010" "111111001000101" "000000001011010" "000011011111010" "111111100000011" "000000010111100" "111110101011010" "000000111100110" "000011100000000" "000000100011101" "111111001111101" "111111101111111" "111111101110110" "000001011001110" "111111110110000" "111111111111100" "111111101000111" "111111111010111" "111111110110111" "000000001010010" "111111100011110" "000000010111010" "000000011111111" "111111111111110" "000000001100010" "000000011001010" "000000010001111" "111111110100101" "111111111010000" "000000010011001" "111111101001111" "000000000101010" "000000000011011" "000000001100001" "111111100011110" "000000000011000" "000000011100000" "000000010111111" "111111111010110" "111111100100110" "000000001101111" "111111111010101" "000000001100110" "000000001011110" "000000011110001" "111111101101001" "000000001110011" "000000000111110" "000000001011100" "000000001111101" "000000000000110" "111111101011011" "111111100011100" "000000000011000" "000000000110011" "111111111110110" "111111101011001" "000000000010101" "111111111110001" "000000011100101" "111111110001111" "000000000000010" "111111110110101" "111111100101000" "111111101110100" "111111111110101" "000000001011000" "000000001000100" "111111101010110" "000000001111000" "111111111100100" "111111110000011" "000000010000001" "000000000111010" "111111110111011" "000000000010010" "111111111110011" "000000001000100" "000000010001010" "000000001011010" "000000010001100" "000000011000001" "111111110110010" "111111010001100" "111111001111101" "111111111110100" "000000000100001" "000000010001010" "111111001101010" "111111110010100" "111111011111011" "111111001100110" "111111010110101" "111111110010111" "000000000110111" "111111101011111" "111111100100001" "111111011100001" "111111100001100" "111111101010010" "111111100001100" "111111110100111" "111111101111111" "111111101110100" "111111111110100" "000000000100100" "111111010111111" "111111101111100" "111111110111010" "111111110000100" "000000000000011" "111111100111001" "111110111110001" "000110001110001" "111111100010100" "000101001101101" "000000111000001" "000100001110100" "000011111011010" "111111111111111" "000100000010111" "000000010101110" "000100001110000" "000011001111101" "000011110101000" "111111111000110" "111111110010110" "000000101100010" "111111101001101" "000010000111110" "000100000000110" "000100110111110" "000100011010100" "000100000100001" "000011100111100" "000101100011010" "000010111100110" "000110111011110" "000011010100011" "111111110110011" "000100011010101" "000100001001000" "000100011100100" "111111100011101" "000100001101111" "111111101111001" "000000011100010" "111110110101111" "111110010011111" "000000001010111" "000000010010111" "000000001100000" "111111001001101" "111111101001111" "111111010110011" "111111101001011" "111111010010011" "111111100011100" "111111110111011" "111000100101010" "111111111000001" "000001011000100" "111110011101111" "000011100010100" "111111000010111" "111111001011000" "111111010110011" "111110010110010" "111110101110011" "111011110010011" "111101001001110" "111111111011111" "111110011011001" "111111111001000" "111110111111101" "111111100100001" "111111101111101" "000001001111111" "111111101101000" "000010110011011" "000000101010011" "000010110011110" "000010011110110" "111111110000011" "000010000110000" "000000011001000" "000010010010010" "000010011010011" "000010011010100" "111111011101001" "000000010100110" "000000110000100" "000000000111001" "000001011100001" "000001100000101" "000001111101111" "000010010011000" "000010001110100" "000010010100001" "000001111110110" "000000110111010" "000010110111001" "000010011110010" "111111111000110" "000010011001100" "000010010110001" "000010001011000" "000000000110101" "000010000110111" "000010100111111" "111111100011001" "000000000000001" "000000011011111" "000001000101001" "000001001000110" "111111100110101" "000000110000001" "111111111101011" "000000011111100" "000000110100110" "000000011010011" "111111101110000" "000000001110000" "000000110010111" "111111100000000" "000000011000101" "000000011001000" "000000111110010" "000000111011010" "000001011100101" "000000101010010" "000001001011010" "111111110000010" "111111011111010" "000001000010010" "111111101110100" "000000011000110" "000000101101111" "000000100000100" "000000001101010" "000000010100001" "111111111011010" "111111100011000" "111111111010111" "111111100101100" "111111101111101" "000000000000101" "000000000111000" "000000100010000" "000000011110101" "000000010010000" "111111110111101" "111111110111111" "000000000000100" "111111100000110" "111111111010010" "111111100101011" "111111101010011" "111111100101111" "000000000110111" "111111110111001" "000000000000100" "111111101111110" "111111110111011" "111111110101000" "000000010111100" "000000000100111" "000000011101110" "111111111011010" "111111110000111" "000000000101110" "111111110000000" "111111100111110" "000000010100011" "000000000001011" "111111100111001" "111111101100100" "000000000101001" "000000001011110" "111111101011010" "000000100010111" "111111101000101" "000000011011011" "000000011010011" "111111111001011" "111111111010001" "000000001001110" "111111011110110" "000000001010111" "111111001111001" "111111111100010" "000000001010000" "000000000011101" "000000100010100" "000000100111100" "000000110111111" "000000000010111" "111111100001100" "111111101101111" "000000001001111" "000000000010001" "000000101010001" "111111110110010" "000000010101101" "111111000011101" "111010000010000" "111111111100000" "000010001010100" "111111111001101" "111111001001011" "111111000001110" "111111101001010" "111111111111111" "000000001001000" "000000001101101" "111111010111101" "111111011010011" "111111110001100" "111111110110000" "111111111011111" "111111101111011" "111111110110010" "111111110101000" "000000001111011" "000000000000100" "000000010000011" "000000001011000" "000000000001001" "000000101001000" "000000110110110" "000000000000001" "111111011000100" "111111101111111" "000000000000001" "111111011010000" "111111111001011" "000000001000101" "000000011010001" "111111110010111" "000010001100110" "000000001110101" "000001001001011" "000001001011001" "111111101010001" "000000011000011" "111111100100100" "000001001111111" "000001000000000" "000000100101110" "111111100101111" "111111110111001" "000000100110011" "111111100100100" "000001001001010" "000000111110101" "000001001111110" "000000100000101" "000001001001101" "000000101001010" "000000100001000" "000001101001111" "000001100111101" "000000101111001" "111111101111100" "000000110011010" "000001101001111" "000000010001010" "000000000100010" "000000101100000" "001100000100000" "111111100000100" "111001111001001" "110100101000101" "111011101101100" "111010001100000" "111111101011110" "111010000101010" "111111110100101" "111010011000111" "111001101001001" "111001100110100" "000000010100101" "000000010111000" "110011000000010" "000000000101001" "110101011010110" "111010011000100" "111011000110000" "111011110100000" "111001100010100" "111001111001111" "111100101101010" "100110110011111" "111001111101100" "111000111101110" "000000011110100" "111011100010101" "111011100111010" "111010100111001" "000000001110100" "111001000011011" "000000100000110" "111111110101011" "111111001110111" "000000011011110" "111111010101111" "000000010000111" "111111011111011" "000000011010010" "111111101010010" "000000001111101" "000000100111010" "000000001000100" "000000010110001" "111111010010110" "111111110001001" "111111110000100" "000000000001001" "000000111000110" "111111111011100" "000000111100001" "000000010110000" "111111110000001" "000001001110000" "000000000110001" "000000100000011" "000000000000100" "111111100000001" "000000110001001" "111111110111001" "000000101111011" "111111111101110" "111111111011100" "111111010111111" "000000000111010" "111111011010111" "111101100010001" "000001000011110" "111111001101101" "111111110011010" "111111011010001" "111111100101111" "111111001101010" "000000000101101" "111111010110100" "111111110111000" "000000001000000" "111111010011100" "111111100001010" "111111001111000" "111111000110011" "000001011000001" "111111011001111" "111111010100001" "111111101100000" "000000000001100" "000000010010111" "000000010001100" "000000000111111" "111111101111110" "111111111010111" "111111100110010" "000000000001011" "000000000110111" "000000010010000" "111111111101100" "111111110001111" "000010011101010" "111111110001001" "000000111010010" "111110110110100" "111111100000010" "111111000100001" "111111110110101" "111111100110110" "111111011000100" "111111110010101" "111111101101011" "111111011100001" "000000100010111" "000000010010000" "000000110001111" "111111001101101" "111110101110011" "111111010111111" "111110101110110" "111111100000001" "111111000101011" "000000100101100" "111111110010011" "111111110000110" "111111101010010" "111111010001100" "111110100000110" "111111001001000" "111111111000110" "111111110111110" "110000001110111" "111111100000001" "110101000011101" "110110111100101" "110110011010100" "110010101011111" "000000001111010" "110001010000010" "111111111000011" "110000100000110" "110001000000100" "110000100010101" "000000001100100" "111111100111000" "110101001000110" "000000000100011" "110001011011100" "110011000000001" "110010101000110" "110010110000000" "110101000011101" "110001100111010" "110010101011011" "110111111111110" "110101101000100" "110001001101011" "111111111000101" "110011001100110" "110011001111110" "110001100100001" "111111101100111" "110000011111111" "000000000110011" "000000000011110" "000000000001100" "111111100111100" "000000001011101" "000000011000110" "111111101000001" "111111101001110" "000000010111011" "000000010100101" "111111100100010" "111111100111110" "000000010101101" "000000010011000" "111111101101001" "111111111000010" "111111100111111" "111111101111101" "000000010000110" "111111111011011" "000000010011110" "111111101100010" "111111100011101" "000000000110101" "000000010111010" "111111101000100" "111111110110011" "111111110101010" "111111110011000" "000000001101000" "000000010011001" "111111111010110" "111101110010111" "000000001010000" "111111001100110" "000000010111111" "000000010000001" "111111100100001" "111111100101100" "111111101011000" "000000010100010" "111111000101001" "000000001100001" "111111011110111" "111111011111001" "111111111001000" "111111110111001" "111111100111100" "000000001101001" "111111011101110" "111111111000010" "111111100110111" "000000001000101" "111111011101111" "111111101100001" "111111110110001" "111111011011010" "111111111010101" "000000001111111" "000000001001000" "111111101001100" "111111111011001" "111111011111101" "111111101010000" "111111010010110" "111111110110101" "000000001101100" "000000011001110" "111011101000011" "000000100010010" "000000001010001" "111111110010000" "111111110111010" "111111101111011" "000000010000111" "111111101001001" "111111110000010" "111111110111010" "000000000011000" "111111111010011" "000000100100000" "000000000010110" "111101011100101" "111111110100100" "111111110011101" "000000000010000" "111111101001010" "000000001000000" "111111011101010" "000000011111011" "000000001110101" "000000010111101" "000000001010000" "000000011110111" "000000000111111" "111111010011101" "000000001100001" "000000011111110" "000000001100101" "000000010000100" "000000011100111" "111111101011001" "000000000101111" "111111110110010" "000000001000000" "000000010000110" "111111101000100" "111111110110100" "111111110100111" "111111100110011" "111111110011100" "111111100111011" "111111100111000" "000000010110101" "000000001011110" "111111101111010" "111111111111010" "000000001101010" "111111101001011" "111111111100101" "000000001111010" "111111100111010" "000000001111011" "000000011111010" "111111100000101" "111111100100101" "000000000110010" "000000010100100" "000000111000010" "000000001100000" "111110111110100" "000000000110011" "111111101101011" "111111110000000" "000000000101100" "000000000011000" "000000001000100" "000000000110111" "111111101100000" "111111101100010" "111111101111100" "111111100101101" "000000001100011" "000000011000001" "111111111100101" "000000011100001" "000000011000000" "000000001001001" "111111111111001" "000000010100101" "111111111010010" "111110111101101" "111110110000101" "111111110010010" "111111100001101" "000000010100001" "000000010101110" "111111110111000" "000000000111110" "111111011010001" "000011010000101" "111111111101001" "000001001111100" "111111111100010" "000010000000110" "000001000110001" "111111101110101" "000000011001100" "111111110000110" "000000111101110" "000000011011111" "000001001101110" "111111101111101" "000000010010111" "000000001001111" "111111111010010" "000000101101010" "000001000001011" "000010000000010" "000000101010000" "000000000111110" "000000001001001" "000000001101010" "111111000111100" "000000010001101" "000000100111110" "111111101010100" "000000110111000" "000001010011110" "000001000111011" "000000000111011" "000001110011100" "111110110010010" "111111101111000" "000001111110011" "000001101111001" "000001111000000" "000001000011101" "000000010111001" "000001000101010" "000000001011100" "000001010001010" "000001111011110" "000010010000011" "111111011100110" "000000001100000" "000001011101110" "000000001110100" "000010001101001" "000000100010000" "000001001000000" "000000011111010" "000000001110011" "000001000010111" "000000010101101" "000001111000100" "000110010010111" "000010011111111" "111111100100111" "111111110101100" "000000010001111" "000000110110111" "111111110110010" "000010100010100" "111111001101101" "111111100001101" "000000000011100" "111111110011010" "111111011101001" "000000001100111" "000000010000100" "000000001110110" "111111110000000" "000000010111100" "000000001111001" "000000100010100" "111111100010100" "111111100100100" "000000000100011" "111111100000111" "111111011001000" "000000011101001" "000000010001111" "000000101000111" "000000110100111" "000000011010011" "000000011011011" "111111101110111" "000000000011100" "000000011011110" "111111011111011" "000000110101110" "000000101110101" "000000001110111" "000000001001000" "000000011100111" "000001001111010" "000000000100101" "000001111110001" "111111101000110" "000010111100010" "000000101111111" "111111110011100" "111110100100100" "111111100000000" "111110010101100" "111110111110001" "111110110011010" "000000001111011" "111111110100011" "000000111110111" "111111110100000" "111111100011101" "111110100101001" "000010010111100" "111111011111101" "111111011101101" "111110100111000" "111110111011101" "000000111101110" "111111110111101" "111110110001110" "000000010011100" "111111010111010" "000000011110111" "111110111111100" "000000000101011" "111111011101110" "000000100100011" "111111110010010" "000010000111010" "111111000011111" "000000111110011" "111111110011101" "111111111001011" "111110111001111" "000000010111001" "111111011011000" "111111100101100" "111111010110110" "000000001011010" "111111011011110" "000000001001111" "111111011001111" "000000010100011" "111111011101010" "000001100010011" "111111001000000" "111110111110110" "111111100101001" "111110110101000" "111111110100000" "111111111010111" "111111100100101" "111111101001100" "111110111011100" "111111110101011" "111111011101001" "000000000101100" "000000001101010" "111110101000111" "111111111110100" "000000001010000" "000001111001001" "111111110110110" "111110111110100" "111111100010001" "111111110011010" "111111101110010" "111111110110000" "000000001000000" "111111101100000" "111111100101000" "111111111001110" "000000110101100" "000000000101101" "111111111000000" "000000000000010" "000000101101011" "111111011110100" "000000100010000" "000000001001010" "111111011111010" "111111101100111" "000000011010000" "111111111001000" "111111111010000" "111111110001101" "111111011110010" "000000001100011" "000000000000101" "111111111101111" "111111110000001" "000000010011001" "000000000101110" "000000010000010" "111111100100011" "111111101000111" "000000001010000" "000000000000011" "111111111111111" "000000001000110" "111111101000000" "111111111111100" "111111110000000" "111111100010011" "111111110101111" "111111110111101" "000000011111101" "000000000001101" "000000010101000" "111111101110110" "000000011101100" "111111111000100" "000000000111011" "000000000110100" "000000010111111" "111111110100101" "111111101011000" "000000011111101" "000000000010101" "111111110000111" "111111101010001" "111111110001000" "000000011011011" "111111101010110" "000000011101010" "000000001100001" "111111100001111" "000000010010101" "000000010110000" "111111111001000" "111111111010011" "000000011101111" "111111110101001" "111111111101011" "000000010001111" "111111100010101" "111111111001001" "000000011000001" "111111110110011" "111111101011100" "000000001110110" "111111100100001" "000000010000010" "000000011110100" "111111101110110" "000000010110100" "111111110100101" "111111110111000" "111111100000111" "111111100011000" "111111101000101" "000000010010101" "111111101110010" "000000001000001" "001100011101001" "000000011101001" "000101101111000" "000111011101011" "000100111100010" "000100111010010" "000000011100001" "000101101001000" "111111111101000" "000101100000000" "000110011011010" "000101011111111" "111111111000010" "111111111100101" "000101101011101" "000000011101110" "000111110001100" "000101010000011" "000100100011101" "000100100000110" "000101100011101" "000101011100111" "000100010100101" "000111110100111" "000101101011011" "000101111001010" "111111101110001" "000101001001011" "000101001110010" "000101010111001" "111111101111001" "000110100110100" "111110111100010" "111111100101001" "000011001100000" "111111010110010" "111101000101101" "111011101001111" "111111011111101" "111111111011000" "111111110110001" "000000000111001" "000000000111111" "000000100110010" "111111111010111" "111111101000001" "111111100110011" "111111011101001" "000000101000011" "111111011001001" "000010011111011" "111111011000111" "111111001100111" "111111111110100" "111111011100100" "111111111111000" "111010001100110" "000000110010001" "111111101110101" "111111111011111" "111011111111000" "111111100101010" "111111100101110" "000001011100001" "000000010010001" "111111100110001" "111101111011101" "111110100000010" "111101111100111" "000000101011000" "111111110110010" "111111100101101" "000000010000111" "111111111010010" "111111011101110" "000000010001111" "111111100111001" "000000000101010" "111101111111101" "000000011100001" "111101111011110" "000000001010010" "111111110001000" "111111111001011" "000000011010001" "000000010011111" "000000100111011" "111111111111010" "111111001010011" "111110000101101" "111111100001000" "000000001101111" "111111011001111" "000000011001001" "111111011101000" "111111000110000" "111111001101010" "111111100010111" "000000011111000" "111110001000111" "111100010000110" "111111010101111" "111111110000001" "000000000100000" "111111101100010" "111111100111101" "111111101010100" "000000010001101" "111111111011011" "111111010111101" "111111101100010" "111111111110011" "000000101001101" "111111110111101" "000000001110101" "111111101100110" "111111101100100" "111111010010001" "111111001101101" "111111101011101" "110010000100000" "000000010110010" "111111101100100" "111111100010011" "111111110110110" "000000000000011" "000000001010011" "111111011011010" "111111100011011" "000000010010101" "111111100011011" "111111011100110" "000001001111100" "000000000100101" "000000010100101" "000000010101100" "000000000000101" "111111101110000" "111111110011001" "111111101111111" "111111100110111" "111111100100101" "111111010101011" "111111110110110" "111111011111001" "111111101110110" "000000001011001" "111111111001110" "000000110010101" "000000011101101" "000000001000001" "000000001101000" "000000010101000" "111111101111111" "000000010110110" "111111110000110" "000000000010011" "111111110110111" "111111100100001" "111111101100001" "000101001010110" "111111101110110" "000010100111110" "000010110001111" "000010110101101" "000001111101111" "111111111000111" "000010001110111" "111111111011000" "000010000101011" "000010010011001" "000010001110011" "000000010001011" "000000000110001" "000010001011011" "000000001001010" "000010000000111" "000010001010101" "000010000001011" "000010001100100" "000010111000100" "000010000000000" "000010001110000" "000010000001010" "000010000111100" "000010001101110" "111111101110011" "000010110001000" "000010011111100" "000010001100100" "000000010000100" "000001011110110" "111001000101100" "111111110011111" "000000000000010" "111110111111001" "111110100111001" "111110010101110" "000000000011111" "111101111111111" "111111100110011" "111110000000000" "111110110110110" "111110000110011" "000000011000101" "111111110010101" "000000000001110" "000000000010011" "111110010111011" "111110000000000" "111110110111110" "111110011010001" "111110000111111" "111110111110001" "111101111110101" "000000011000011" "111110000010110" "111110100010000" "000000000010011" "111110100101000" "111110100101011" "111110110000001" "000000010010110" "111101110110111" "000000111101010" "111111011001101" "111111111101110" "000000110011111" "000001110000110" "000000101111101" "111111101100100" "000000000100101" "111111111011101" "111111110101110" "000000001000110" "111111101111001" "111111101011100" "000000010010010" "111111110010000" "111111101111000" "111111101001000" "000000001100111" "000000011000110" "111111100000111" "000000001010111" "111111100010011" "111111110000110" "111111100010110" "000000010110111" "111111011100010" "111111100001000" "000000000101100" "000000010011100" "000000011100110" "111111111111110" "111111001101101" "000001010101000" "000000000101010" "000000111001011" "111111100100101" "000001101111011" "000000000001000" "111111110000111" "000000010101001" "111111110100100" "111111101000011" "111111110101010" "111111001001010" "000000000010101" "111111110001000" "111111000110010" "111111110110110" "111111011010011" "000000001101100" "000001001000100" "111111100000000" "111111110111011" "111111100010110" "000000010110110" "000001010111110" "111111110011101" "111111101001010" "000000000101101" "111111111101111" "000000100011011" "111111110001100" "000000000001010" "111111001001101" "111100101011000" "000000000110010" "000010010101000" "000001011000110" "111110111000100" "111111100000100" "000000000101001" "000000000111100" "000000000100001" "111111110011011" "000000000010000" "111111100001111" "000000000111100" "111111110011110" "000001010010110" "111111110111010" "000001100011101" "111111100100011" "111111011101111" "111111011111101" "111111110010001" "111111110101010" "111110110001010" "111111001000111" "000000100101011" "111111101110010" "111111011001000" "111111110001010" "111110110111110" "111111011000011" "111111111010100" "111110100001100" "000010001101000" "111111101111010" "000001001101000" "000000011100001" "000001011011110" "000001101111001" "111111011101111" "000001000011110" "111111101010011" "000000101001011" "000001000000010" "000000010011000" "000000001110101" "111111010100110" "000000001100100" "111111101001010" "111111011100111" "000001000010111" "000000011011101" "000000111000101" "000001001010110" "000000111000101" "000000011101000" "111111110100110" "000000000110110" "000000000101000" "111111011011000" "000000011000111" "000000011011000" "000000110000110" "111111100111100" "111111110100111" "000000010110010" "111111111100000" "111101000111111" "000000001001101" "111110100100000" "000000000101000" "000000010110000" "000000110000110" "111111110000011" "000000101101001" "000000100111110" "000000011000011" "000000000100000" "000000000101010" "000000000010001" "000000001011010" "111111111010111" "000000011010000" "111111110010111" "000000100001111" "000000110010001" "000001000110111" "000000101110101" "111111101011100" "111111011110001" "111111101111100" "111111110101101" "000000010110001" "111111100000100" "000000101011110" "111111110101011" "111111111100011" "000000001101110" "111111110001001" "000000111001101" "000000100010000" "111111100000111" "111111011110001" "000000001011011" "000000000111011" "111111111010011" "000000001000000" "000000100110101" "000000011100010" "000000010010001" "000000000110100" "000000101110011" "111111100110111" "000001011110001" "000000001111110" "000000111010000" "111111100011010" "000000000100010" "111111110111001" "000000010110111" "111111110111000" "111111111110010" "000000011010101" "111111101011001" "000000000011011" "000000011010011" "000000011010000" "111111100001001" "000000011111111" "000110001101101" "111111111001101" "000100001101010" "111111011000000" "000000111010011" "111111001111000" "111111110111111" "111111100010110" "111111111011111" "111111000100010" "111111001000101" "111111010111011" "000000001110111" "000000001110110" "111110111111001" "000000010110011" "111111001010000" "111111100111001" "000010111110011" "111111101110111" "111111011000011" "111111100111101" "000000000010000" "110101011110010" "111110001100011" "111110100111001" "111111111010001" "111111111010010" "111111110100111" "111111110011010" "111111101111111" "111111011001110" "000000100101000" "111111011110010" "000000010011001" "000000000001010" "000001000000111" "000000110010110" "000000010010010" "000001010001111" "111111100101110" "000000100100000" "000001010011101" "000001010111111" "111111011110111" "111111100010110" "111111101000011" "111111111010101" "111111111111010" "000001000010100" "000001010111110" "000001000100011" "000001001110100" "000000111101001" "000001100100100" "000000110100100" "000000001010000" "000000011100011" "111111101011110" "000000111010001" "000001011101000" "000001001110101" "111111011011011" "000000111010010" "000001100111101" "111111111000100" "111111110101110" "000000000010001" "000001110110000" "111111111100010" "111111011011010" "000000101111100" "111111101010000" "000000001000011" "000000001000111" "000000101101111" "111111100011000" "000000000010100" "000000010010111" "111111111110111" "111111111001010" "111111110100000" "000001101001100" "000000001110100" "000000000100101" "111111111100010" "000000101001000" "111111001100110" "000000010101101" "000000001000001" "111111110110011" "000000010000010" "111111111101000" "000000101110010" "111111111100001" "000000001001011" "000011000011110" "111111100101011" "111110111001011" "000000001101011" "000000010111101" "000001001111001" "111111111001011" "000000001011111" "111111100101101" "000000101000000" "000000011110000" "000000100010011" "000000010111001" "111111101001010" "000000011010101" "000000010111001" "000001001010110" "000000100010000" "000000111101101" "111111111010000" "000001000101011" "000001001011001" "000000001000100" "000000010000100" "000001001010101" "000000110001111" "111111100110111" "111111111110000" "000000101111111" "000000101000111" "000000001111100" "000000110101101" "000000010100111" "111111100111100" "000000000001101" "000000001111101" "000000000010101" "000000010111100" "111111101010010" "000000000100010" "000000001001101" "000000000011100" "111111111100110" "000000001100010" "000000000101100" "111111111111000" "000000001001001" "000000011010110" "111111100100010" "000000001101101" "111111100100010" "111111111001011" "000000000111100" "111111101111000" "000000010111101" "000000000011110" "000000010100000" "111111111100111" "000000011111000" "000000001000101" "111111101001011" "111111100100000" "111111100101010" "000000010101110" "000001100111001" "111111110101010" "111110111000111" "111111011111110" "000000100100001" "111111100111010" "000000001011101" "000000011101101" "000000000110101" "111111110110110" "000000000100011" "000000010100111" "111111101111110" "111111111101010" "111111010101000" "000000001110100" "111111110110011" "000000010101111" "000000011010011" "111111111010101" "111111110011011" "000000010001100" "111111110110000" "000000000101011" "000000110100011" "111111110111111" "000000000011000" "000000011111011" "000000000111101" "000000100000001" "111111110000110" "000000100100011" "111111011010110" "111111110101111" "111111100010111" "000000111000111" "111111111010101" "000001001000110" "111111110111001" "000000110110101" "111111100001011" "000000011011010" "000000000011101" "000000011101001" "111111011101111" "111111011000100" "000000010010110" "111111110011010" "111111110001000" "000000100001011" "111111111010111" "000000011110011" "000001001100010" "000001000100000" "000000101011010" "000000010000011" "000000011101000" "111111111000111" "111111110111001" "000000101110111" "000000011010110" "000000110101010" "111111111110011" "000000001110111" "000000011010110" "111111111001010" "000000011001110" "111111101001000" "111111111110000" "111111100001000" "000000000010100" "111111100010111" "000000001100011" "111111111010000" "111111101001010" "000000011001111" "111111101010111" "000000000100111" "000000010111001" "000000001010101" "111111101100011" "111111110001101" "111111110011010" "000000011111010" "111111110001011" "000000001101011" "111111110010000" "000000010000110" "000000001010100" "111111101010110" "111111111000110" "111111100101101" "000000001110111" "000000001010010" "000000001010011" "111111100110101" "111111111110000" "111111100100010" "000000010111011" "111111111000001" "111111101010001" "111111101100011" "000000001000010" "000000001001001" "111111111100001" "000000011001000" "000000011011011" "111111101100001" "000000011101110" "000000000101011" "111111101111101" "111111111011110" "111111110001010" "111111101100010" "000000000001001" "111111110101010" "111111111111101" "111111110010000" "000000010000101" "000000001011001" "111111111100011" "000000010100111" "111111111010010" "111111111010011" "000000000000000" "111111101100111" "000000011011001" "000000001100111" "111111101000011" "111111111000111" "111111010100100" "000000011111011" "111111111011000" "000000011011110" "111111110001111" "000000110100010" "111111110101011" "000000001111100" "000000001010000" "000000100111001" "111111111011100" "000000000100010" "000000110000000" "111111011101111" "111111111111101" "000000011000001" "111111111000001" "000000101110000" "000001010000110" "000001000110000" "000000100110101" "000000001001001" "111111110110010" "000000000100101" "111111111110011" "000001000000011" "000000110101011" "000000111001111" "111111100011010" "111111110100000" "000100010001100" "000000001110000" "000000010110101" "000001010001100" "000001011100000" "000001010001111" "111111011100011" "000000111100101" "111111110100110" "000000111001101" "000001001101010" "000000100111110" "000000001001000" "000000010011011" "000000100110010" "000000011111010" "000000101001111" "000001001110011" "000001101110001" "000000111111110" "000001110110100" "000001001110011" "000001011100101" "000000101110100" "000000110110111" "000000110010011" "111111111110010" "000001000100001" "000001100100000" "000001011100111" "000000010101011" "000000100001110" "000010010000010" "111111011110000" "000010011101001" "000001010100100" "000010100100010" "000010000000000" "111111111011011" "000010110111011" "111111111011111" "000010101101010" "000010100110000" "000010011111011" "000000000101100" "111111100111100" "000001001010001" "111111101000000" "000001100000111" "000010000111010" "000010001110110" "000001111011111" "000010000000011" "000010100001011" "000010000110101" "000001110010111" "000011000101011" "000001111110110" "000000010011100" "000001111110011" "000010010000110" "000010011000101" "000000010000011" "000010011010010" "111111111000101" "111111111100010" "111111110110110" "111111101111000" "000000011000011" "111111110111010" "111111100011111" "000000010011011" "111111110110011" "000000010000101" "000000010111001" "111111100001110" "000000001001111" "000000011111110" "000000000101111" "111111101000111" "000000010111110" "000000000101110" "000000000110001" "111111100010110" "000000000001011" "000000010000010" "000000010101000" "000000001001010" "111111110010111" "111111110001000" "000000011001110" "000000010000111" "000000011001001" "111111110101011" "111111110001001" "111111101110100" "000001110101111" "111111111101100" "111111100010001" "111111101101000" "000000011110111" "000000100010001" "000000010100000" "000000000110001" "111111111100000" "000000010000111" "000000000111100" "000000010110010" "000000011000010" "111111110000001" "111111001001001" "111111100110111" "111110111100101" "000000100111101" "000000101110001" "000000001000111" "000001000011000" "000000101111101" "000000011100100" "000000011000100" "000001000010001" "111111011111101" "000000001010001" "000000001110110" "000000010001000" "000000101100010" "111111100001100" "000000101000010" "111011100110000" "000000001111110" "000011100010101" "000010000111101" "000010111100001" "000010011110110" "000000010011110" "000010100110010" "111111101000011" "000010110000001" "000010100001111" "000010011100011" "000000001110011" "111111101001110" "000010100010010" "111111111001111" "000010000011111" "000010101111110" "000010111000111" "000011000000010" "000011100001110" "000011001000100" "000010100011110" "000010111110110" "000011001011101" "000010101100011" "000000001000110" "000010101111110" "000010101010000" "000010100011010" "111111110000010" "000010010110100" "111111111000000" "111111110000011" "000000000110100" "000000010101101" "111111111001000" "000000001001100" "000000000110100" "111111111101101" "111111111110111" "000000001000000" "111111111101011" "111111101011110" "000000011111100" "111111101100011" "000000001100010" "111111110001000" "111111100100111" "000000011101100" "111111111001000" "111111110001100" "000000001000011" "000000000101111" "111111111001010" "111111101011111" "111111101010000" "000000010111010" "111111111011100" "000000001011000" "111111100101011" "111111101101001" "000000001011110" "111111101110100" "000001010111100" "000000010000111" "111111011101010" "111111101001010" "000000010100100" "111111111000110" "000000011001110" "111110110011110" "000000000100010" "111111000010010" "111111011111101" "111111111101100" "111111100100110" "000000001100001" "111110001101000" "000000000110111" "000000111100110" "111110100110000" "000000011101001" "111110011100010" "111110100001101" "111111001101110" "111110100000001" "111101111001101" "000000000101001" "000000000111001" "000000010111010" "111110110011111" "111111010100111" "111111011010110" "111111101011001" "000000010011110" "000000011010010" "111111100111100" "000001000101010" "111111011101010" "000000000111100" "111110011100010" "111111110011100" "111111001011000" "000000011011011" "111111100000100" "111111111010001" "111111110000111" "000000010111111" "111111010101101" "000000011100111" "111111011110010" "000000011000000" "111111010110000" "000000000100011" "111110111000100" "111111110001010" "111111110010111" "111110101010000" "111110000000110" "111101111101000" "111111101001110" "000000001010100" "111111101110111" "000000001001011" "111110111011110" "111111100100001" "000000001001111" "111110011111011" "111111100011010" "111111111111000" "111111111100110" "111111010011001" "111111101011101" "111111111011001" "111111100000101" "000000011010000" "111111101100000" "111111101110011" "111111110110110" "111111100101111" "111111010010101" "111111111100010" "111111101011010" "000000011011010" "111111111010001" "111111101011000" "111111100000101" "111111110100001" "111111101001100" "111111110101001" "000000001110011" "111111001000000" "000000001000001" "111111111000101" "111111011101111" "111111101111000" "111111111100000" "111111101000000" "111111110011110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 20
set hasByteEnable 0
set MemName mlp_monte_carlo_bfYi
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 16
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "111111101011001" "010011110100001" "111111111010100" "111111110000001" "010011011100100" "111111111101110" "010011100100011" "010011010101100" "010011010010001" "111111111010001" "010011010110101" "111111110010000" "010011001110000" "010011010111001" "000010000010000" "010011010110001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 21
set hasByteEnable 0
set MemName mlp_monte_carlo_wg8j
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 13
set AddrRange 512
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "1001101011001" "1001100010000" "0000010100110" "1111110111101" "1011000101001" "0000001100001" "1011000111011" "1010001000101" "1010010001011" "1111011100110" "1010111011100" "0000010011011" "1011000101000" "1010000100111" "0010111011010" "1010110100010" "1111010100110" "0000100010101" "0000010111110" "0000100101111" "1111100000010" "0000101011100" "1111010110010" "1111100010100" "1111101011100" "0000101000101" "0000010011000" "1111100011011" "1111100110111" "0000010011101" "1111101111100" "0000011100010" "0000011000101" "0011010111011" "1111111000100" "1111001010001" "0010101101101" "1111100011111" "0011100011001" "0011110010000" "0011001001100" "1111100111000" "0011010111101" "0000000110111" "0011011001100" "0011100111101" "1110110100100" "0011010111001" "0001100001001" "0000011000001" "0000011110011" "1111100001111" "0000100111100" "0000100001010" "0000001001111" "0000011000111" "0001000000010" "1111011100010" "0000110010111" "1111011101000" "0000111010001" "1111111000001" "1101101010011" "1111111110101" "1111111101001" "0001000010110" "1111101010011" "1111001011111" "0010000010100" "1111111010100" "0001110101011" "0010000110111" "0001111110011" "0000000110000" "0000110100100" "1111110001101" "0001110100110" "0000110101100" "0000100101011" "0001111001111" "1111111000111" "0001001111111" "1111111100110" "0000001000011" "0000001111010" "1111101011110" "0000011100111" "0001001011001" "0001001100010" "1111010010001" "0000001101111" "0000010111010" "0000110111111" "0000111110111" "1111101100101" "0001100011001" "0000001110110" "1111101010001" "0000001100001" "1111010100100" "1111011111011" "0000001000010" "1111110100001" "0000010110011" "1111101110000" "1111100110111" "0000001010101" "0000011011010" "1111100110101" "0000100111011" "1111111011100" "1111111111001" "1111100000011" "0000010101101" "0000011101110" "1111100010010" "0000111110000" "1111100011011" "0000000011110" "0001011101111" "0001011101101" "1111101000110" "0001001111010" "1111000101011" "0000111100000" "0000001011100" "1111110110000" "0000010101111" "1111100101100" "1111100000100" "0000100001101" "0000001001010" "0000001100110" "1111011111010" "1111010110111" "0000101000010" "0000011011110" "1111110100000" "1111011011101" "0000000101001" "0000000110011" "0000011110101" "0000101100100" "1111010010111" "1110110111001" "0000010100100" "1111111111101" "1111100110110" "1111101101101" "0000011010111" "1111111100011" "0000110001000" "0000111000101" "1111101110000" "0000001111101" "1111011101111" "1111111010110" "0000101010000" "1111101111100" "0000010101111" "1101110100100" "0001001111111" "0000001111000" "1111010110010" "0000101001100" "0000001110011" "0000101110001" "0000100100001" "0000100111101" "0000011000010" "0000111001010" "1111110001110" "0000111001000" "0000111001110" "1110111011110" "0000100100110" "1100011110101" "0000101011011" "0000011011101" "1111001001110" "0000110101101" "0000010011000" "0000011011010" "0000001010111" "0000000011100" "0000010000000" "0000111100001" "1111111101101" "0001001000010" "0000001000011" "1111010100111" "0000101100101" "0000100100110" "1111101000100" "0000101010010" "1111011100001" "0000000000101" "0000100111010" "1111100010011" "1111011101111" "0000000111111" "1111100111110" "1111101100001" "1111111000011" "0000100000010" "0000011111100" "1111011100111" "0000001101000" "1111100110000" "1111110010111" "0000100100110" "0000011010001" "1111110011101" "0000100100100" "0000100101010" "1111011111110" "1111100101111" "1111110110011" "0000010100001" "0000000100001" "0000100110101" "1111101010111" "1111101011001" "1111100011100" "1111110010001" "1111111011100" "1111100010101" "0000000111011" "1111111100101" "0000010010011" "0000111010101" "0001000100110" "0000101100111" "0000011011011" "1111110011111" "1111110111011" "0001000111101" "0001000001001" "1101010101101" "0000110010101" "1111011101100" "1111101101001" "1111111010101" "0000100001100" "1111110111011" "1111101010100" "0000011111101" "1111110110000" "1111101111010" "0000010011110" "1111100101000" "0000000001100" "1111110011010" "0000001001010" "0000001001110" "1111100001000" "1101010000100" "1111101101101" "1111010101100" "0000010001001" "1111111001101" "1111011100011" "1111100101010" "0000001110011" "1111111011100" "1111110100100" "1111110010110" "1111100101101" "1111111010100" "0000110000000" "1100111010001" "0000011101100" "0000001101110" "0000111001111" "1111111010101" "0000011010010" "0000110111001" "1111011100111" "0000001100010" "0000100011000" "0000001011110" "1111011001000" "0000110110100" "1111001101001" "0000101110001" "0000011001100" "0000000000100" "1111101111010" "0000001110111" "0001110011111" "1111100111101" "1111100110111" "0001011000100" "1111101100010" "0001010100110" "0001010000110" "0001100101110" "1111010100111" "0000101111001" "1111101101000" "0001010101101" "0001101000100" "0000110010011" "0001111111100" "1111110100100" "0000111011111" "1111100110010" "1111101110110" "1111101101110" "0000000100001" "0000100001001" "0000001111111" "0000011101110" "1111001111101" "1111110111010" "1111111110101" "1111111110110" "0000110001011" "0000100101010" "0000101000000" "0001110110111" "0001011100001" "0000001110010" "0000011101111" "0001000111000" "1111100100010" "0000111000000" "0001000100111" "0001010011001" "1111111111000" "0000010111111" "1111011111101" "0000101001000" "0001001100010" "1111100100101" "0001000000100" "1111110111001" "0001110011001" "1111110001010" "0000011010110" "0000100011111" "0000001100001" "0001000010011" "0000011001101" "0000111001101" "0000011001000" "0001011100111" "0000001001011" "0000111001101" "0001010111101" "1110111101011" "0001110100010" "0000011101100" "0000010110101" "1111010100010" "0000010000111" "0000000000011" "1111110001001" "0000111011011" "0001000010011" "0000101010100" "1111111001000" "0000011110111" "0000011001111" "0001000010100" "0000011100001" "0001001000110" "0000001001011" "0000010101011" "0010100110011" "1111111101000" "0000001110010" "0011011100011" "0000011100100" "0010001111110" "0011100011101" "0011010101001" "0000100011000" "0011001000100" "1111110000001" "0011010101110" "0011010111110" "1010100100101" "0010111000010" "1110010110111" "0010001110111" "0000100110101" "0000001000010" "0001101000101" "0000000010110" "0010011010110" "0010111101011" "0001100110111" "0000000010111" "0010000000101" "1111110010101" "0010111000100" "0010100101101" "1110111011010" "0010000011010" "1100110000110" "1111101111011" "1111010001001" "1111001011111" "0000100000010" "1111011011101" "0000100000100" "1111100111110" "0000011110011" "1111011111100" "1111111101110" "1111110011111" "1111110011111" "0000101111110" "1111001101100" "1111111100011" "1111100111110" "0000011000110" "0000011111010" "0000100111100" "1111010011101" "1111011010110" "1111111010111" "1111111000011" "1111011010101" "0000000111011" "0000001101101" "0000010000100" "1111101011110" "0000010111010" "0000011101100" "0000001111110" "0000011110101" "1111110010100" "1111111010111" "1111100111101" "0001000101011" "1111011011010" "0000111100111" "0000101101101" "0001001110011" "1111010001000" "0000101011010" "1111111110101" "0001001101011" "0000101010011" "0000010000100" "0000011000101" "0000101111110" "0001001000101" "0000001101000" "0000001010111" "0000111100100" "0000001100110" "0001001011101" "0000000010010" "0000010100110" "0000010000000" "0001000111000" "0000010011000" "0001010000110" "0000101001110" "0000010110101" "0000101101100" "1111011111001" "0000010110100" "1111101111110" "1111100011100" "0001001010000" "1111110111111" "0000011110110" "0001001110101" "0001010111000" "0000010110011" "0000111000001" "1111011110010" "0000011011111" "0000011101101" "1111110000110" "0001001110111" "0000000011010" "0000100011010" "0000011001011" "0000100000101" "1111111001101" "1111011011001" "0000001100000" "0000010000000" "1111100001100" "1111101010011" "1111111010001" "1111111100010" "1111111111001" "0000001111101" "0000000111111" "1111101101100" "1010101101001" "0000011101001" "1111001001001" "1111000111100" "1111101100011" "1111010011001" "0000001011100" "1111010110111" "0000100101001" "1111101001000" "0000001100000" "0000001010000" "1111100000100" "1111111110000" "1111011101101" "0000011110101" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 22
set hasByteEnable 0
set MemName mlp_monte_carlo_bhbi
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 15
set AddrRange 16
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "010011001101000" "010011001011000" "000000000000000" "010011011110001" "111111110101101" "111111111101011" "111111111110110" "010011000100101" "111111111010101" "000000000000000" "010011000100001" "010010111110111" "000000000000101" "010011000001000" "111111110010111" "010011000111100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 23
set hasByteEnable 0
set MemName mlp_monte_carlo_wibs
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 14
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "11001101000001" "11000100101111" "11111100000100" "11001011111010" "11111110110100" "00000100110101" "00000011110010" "11010000011001" "00000010101000" "00000011100110" "11001101101111" "11001001010010" "11111101111000" "11000101000000" "11111110011100" "11001100011011" "00010010100110" "00001110000101" "11111010010110" "00001000111001" "11111111100101" "00000010110000" "00000000101100" "00001110000001" "11111001111010" "11111101111000" "00001010010100" "00010001011011" "00000010001101" "00001101101011" "11111110000010" "00001000100011" "11111110000000" "11111010000100" "00000000001010" "11111011101100" "11111110110000" "00000011001101" "11111100100000" "00000000010000" "00000101001110" "00000010110010" "00000100001011" "00000001010111" "00000010000101" "11111110110101" "11111110011010" "00000110010111" "00000110110000" "11111100000100" "11111011101000" "00000011011010" "11111011110101" "00000000101110" "00000100000010" "11111101001000" "00000100010110" "11111110000010" "00000010001001" "00000000010010" "00000100101010" "00000111111000" "00000011000001" "11111100100100" "00000111110100" "00000101000110" "00000011100001" "00001101001001" "00000010001101" "11111011100010" "11111000111110" "00001010100010" "11111110111110" "11111010110100" "00001110100111" "00001110101111" "11111101110000" "00001010111111" "00000010100011" "00000100010001" "11111010111101" "00000011111011" "11111100010001" "00000110100001" "11111110100100" "00000001000001" "11111101000010" "00000100100010" "00000101011101" "00000110101110" "11111001100101" "00000100000011" "00000011110000" "00000010000001" "00000110101001" "00000111000011" "00000111111101" "00001000111011" "11111101100100" "00001000111011" "11110111101110" "00000001010001" "00000010010101" "00001110001011" "11111001101010" "11111010100111" "00000011011001" "00001110101110" "00000001001111" "00000111101101" "11111111100000" "00000110011011" "00001010011110" "00001100000000" "11111100001110" "00000101111011" "00000100010000" "00000011110111" "11111110110100" "00001000100001" "11111100111111" "11111001001000" "00001011000001" "00010001111101" "11111101111010" "00001110000001" "11111000010010" "00010001110111" "00001100001101" "00001000010110" "11111001111110" "00001101110111" "00000000100000" "11111010101000" "11111101110000" "00001101010111" "11111111100001" "00000011100010" "00001011110010" "00010000110111" "00000001011000" "00001100111000" "00000010110011" "00001011010001" "11111101010110" "11111001001011" "00000110011011" "11111101110011" "00000000011001" "00000000010010" "00000110101110" "11111101101101" "00000101111010" "00000101100111" "00000100000110" "11111101100010" "00000011100110" "11111100101000" "11111101100000" "00000100101111" "00001000111011" "00001111101001" "11111101111101" "00000011011111" "11111010010001" "00000000110001" "00000000010011" "00001110001001" "00000101111001" "11111100001101" "00000101101010" "00000110111000" "00000100000010" "00001001010100" "00000011011001" "00001001011001" "11111111110010" "00000111001000" "11111011110111" "00000010001101" "11111100001001" "11111001000100" "00000000100001" "00000000111110" "11111100010001" "00000010001000" "11111010010110" "11111111110100" "11111011010000" "11111011011000" "11111111001110" "11111011101110" "00001010100101" "00001111001110" "00000100000100" "00001101000010" "00000000000110" "11111111111000" "00000001000011" "00001101110110" "00000010011010" "11111010110100" "00001100011010" "00010000011111" "00000000111110" "00001011111100" "11111001110110" "00000100111010" "00001010011000" "00010001110101" "00000000000010" "00001110000000" "00000000100011" "11111111100111" "00000101101001" "00001111000010" "00000101000001" "00000100100000" "00000101110101" "00010010011110" "11111001101011" "00001101101010" "00000101010011" "00000111011001" "01000001111100" "01000000111000" "00000000110010" "00111001111111" "11111011010110" "11111010001000" "11111011000110" "01000001111111" "11111010010101" "00000101011100" "00111001111001" "00111111011110" "00000000000001" "00111001100100" "00000000010010" "00111101100011" "00001100010000" "00001000011000" "11111110100000" "00000111010100" "11111110010110" "11111110101111" "11111011011010" "00001100100000" "11111101101001" "11111011001111" "00001110100100" "00001010000001" "11111100010100" "00001110101001" "11111110111110" "00001111010000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 24
set hasByteEnable 0
set MemName mlp_monte_carlo_wjbC
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 12
set AddrRange 16
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "001110100011" "010100110111" "111001011011" "001001111100" "111101110001" "111010101100" "000000011111" "010001100110" "111110101100" "000101001100" "001111110000" "010011111010" "000010001000" "010001110110" "111000000110" "001111000100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 25
set hasByteEnable 0
set MemName mlp_monte_carlo_okbM
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 16
set AddrRange 100
set AddrWd 7
set impl_style block
set TrueReset 0
set IsROM 0
set ROMData { }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 26
set hasByteEnable 0
set MemName mlp_monte_carlo_dlbW
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 16
set AddrRange 64
set AddrWd 6
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 27
set hasByteEnable 0
set MemName mlp_monte_carlo_dmb6
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 16
set AddrRange 32
set AddrWd 5
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 28
set hasByteEnable 0
set MemName mlp_monte_carlo_dncg
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 16
set AddrRange 16
set AddrWd 4
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 29 \
    name input_V \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename input_V \
    op interface \
    ports { input_V_address0 { O 4 vector } input_V_ce0 { O 1 bit } input_V_q0 { I 16 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'input_V'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -2 \
    name ap_return \
    type ap_return \
    reset_level 1 \
    sync_rst true \
    corename ap_return \
    op interface \
    ports { ap_return { O 1 vector } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -4 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


